import numpy as np
import matplotlib.pyplot as plt
f = {(1, 0.0): 9.76469973102212e-06, (1, 0.05): 6.726702209562063e-06, (1, 0.1): 2.9918004292994736e-06, (1, 0.15): 2.982900245115161e-06, (1, 0.2): 3.3267985563725233e-06, (1, 0.25): 8.468397427350282e-06, (1, 0.3): 9.657794842496514e-06, (1, 0.35): 5.766702350229025e-06, (1, 0.4): 3.0873955693095924e-06, (1, 0.45): 3.0059071723371742e-06, (1, 0.5): 2.939400263130665e-06, (1, 0.55): 3.9157024584710594e-06, (1, 0.6): 3.0090007930994033e-06, (1, 0.65): 5.7619018480181695e-06, (1, 0.7): 2.9620996210724113e-06, (1, 0.75): 3.0005001462996004e-06, (1, 0.8): 7.272700779139995e-06, (1, 0.85): 7.218202343210578e-06, (1, 0.9): 7.763802539557218e-06, (1, 0.95): 3.6832010373473165e-06, (1, 1.0): 3.1249981839209794e-06, (2, 0.0): 5.175098543986678e-06, (2, 0.05): 1.3043497456237673e-05, (2, 0.1): 1.1488302843645216e-05, (2, 0.15): 1.1463598115369678e-05, (2, 0.2): 7.65429763123393e-06, (2, 0.25): 5.031100241467357e-06, (2, 0.3): 4.977504489943385e-06, (2, 0.35): 9.49770282022655e-06, (2, 0.4): 7.42019759491086e-06, (2, 0.45): 8.78999731503427e-06, (2, 0.5): 4.914699820801615e-06, (2, 0.55): 1.1765399482101202e-05, (2, 0.6): 1.2254901463165879e-05, (2, 0.65): 9.679098846390843e-06, (2, 0.7): 8.565199794247746e-06, (2, 0.75): 8.765501203015446e-06, (2, 0.8): 9.80039918795228e-06, (2, 0.85): 4.840203793719411e-06, (2, 0.9): 5.018699681386352e-06, (2, 0.95): 4.809503210708499e-06, (2, 1.0): 1.0451299836859107e-05, (3, 0.0): 1.2578300200402736e-05, (3, 0.05): 1.481409906409681e-05, (3, 0.1): 1.4364597387611867e-05, (3, 0.15): 1.4078996377065777e-05, (3, 0.2): 9.393198415637017e-06, (3, 0.25): 1.6429798677563668e-05, (3, 0.3): 1.5962197678163647e-05, (3, 0.35): 1.76329945679754e-05, (3, 0.4): 2.0893898559734226e-05, (3, 0.45): 1.4389400836080313e-05, (3, 0.5): 9.870097041130066e-06, 
(3, 0.55): 1.113719865679741e-05, (3, 0.6): 1.4946397161111235e-05, (3, 0.65): 1.4966801274567842e-05, (3, 0.7): 2.0763105480000376e-05, (3, 0.75): 1.1380094569176435e-05, (3, 0.8): 1.037220167927444e-05, (3, 0.85): 1.0100203100591898e-05, (3, 0.9): 1.3193399645388127e-05, (3, 0.95): 1.1593794915825129e-05, (3, 1.0): 1.4998703263700009e-05, (4, 0.0): 2.666650083847344e-05, (4, 0.05): 2.978070266544819e-05, (4, 0.1): 3.0463604023680092e-05, (4, 0.15): 2.363510336726904e-05, (4, 0.2): 2.54961084574461e-05, (4, 0.25): 3.946760413236916e-05, (4, 0.3): 2.751340251415968e-05, (4, 0.35): 2.808720385655761e-05, (4, 0.4): 2.7256497880443932e-05, (4, 0.45): 2.988729765638709e-05, (4, 0.5): 2.8219598811119795e-05, (4, 0.55): 3.219470102339983e-05, (4, 0.6): 2.833200106397271e-05, (4, 0.65): 3.852560208179057e-05, (4, 0.7): 3.598799859173596e-05, (4, 0.75): 3.058620472438634e-05, (4, 0.8): 4.260029899887741e-05, (4, 0.85): 3.777799755334854e-05, (4, 0.9): 3.8678695680573584e-05, (4, 0.95): 2.55476962774992e-05, (4, 1.0): 3.115920093841851e-05, (5, 0.0): 6.06789980083704e-05, (5, 0.05): 5.758480238728225e-05, (5, 0.1): 5.305209942162037e-05, (5, 0.15): 5.935209919698537e-05, (5, 0.2): 8.318410371430218e-05, (5, 0.25): 5.314150429330766e-05, (5, 0.3): 6.06251978315413e-05, 
(5, 0.35): 6.684019742533565e-05, (5, 0.4): 7.346000266261399e-05, (5, 0.45): 6.739510223269463e-05, (5, 0.5): 7.035650312900543e-05, (5, 0.55): 6.384629593230785e-05, (5, 0.6): 8.11039013788104e-05, (5, 0.65): 7.044639391824603e-05, (5, 0.7): 8.324429928325117e-05, (5, 0.75): 7.30145974084735e-05, (5, 0.8): 7.265950203873217e-05, (5, 0.85): 7.33502998482436e-05, (5, 0.9): 9.874849650077522e-05, (5, 0.95): 8.261939813382924e-05, (5, 1.0): 8.595300209708511e-05, (6, 0.0): 0.00013005199935287238, (6, 0.05): 0.00012259310367517174, (6, 0.1): 0.0001163641014136374, (6, 0.15): 0.00013301009847782553, (6, 0.2): 0.000129890302894637, (6, 0.25): 0.00014531659823842347, (6, 0.3): 0.00013707420276477933, (6, 0.35): 0.00016677659982815385, (6, 0.4): 0.0001714341975748539, (6, 0.45): 0.00016815750231035054, (6, 0.5): 0.00014223549445159734, (6, 0.55): 0.00015165109816007316, (6, 0.6): 0.0001923311911523342, (6, 0.65): 0.00016753740492276848, (6, 0.7): 0.00019404650083743036, (6, 0.75): 0.0001610231038648635, (6, 0.8): 0.00018042789702303708, (6, 0.85): 0.00019403050118125975, (6, 0.9): 0.0002359602968208492, (6, 0.95): 0.00021190989809110762, (6, 1.0): 0.00021796420053578913, (7, 0.0): 0.0006131796969566494, (7, 0.05): 0.00044949980499222876, (7, 0.1): 0.000364944601431489, (7, 0.15): 0.000390028398251161, (7, 0.2): 0.0005452584952581673, (7, 0.25): 0.0006994866037275642, (7, 0.3): 0.0005408289947081358, (7, 0.35): 0.00036956869857385753, (7, 0.4): 0.0004728573011234403, (7, 0.45): 0.00039849549578502774, (7, 0.5): 0.00040489930124022066, (7, 0.55): 0.00042437300342135133, (7, 0.6): 0.0004682487016543746, (7, 0.65): 0.0004405698028858751, (7, 0.7): 0.00046781740081496535, (7, 0.75): 0.00047460140055045484, (7, 0.8): 0.000562807303853333, (7, 0.85): 0.0004899907002691179, (7, 0.9): 0.0005818506961222738, (7, 0.95): 0.0006357996971346438, (7, 1.0): 0.0007368868985213339}
vlb = 1
vub = 7
x = list(range(vlb, vub+1))
y = [round(0.05*i, 2) for i in range(0,21)]
X = np.array(list(list(i for i in range(vlb, vub+1)) for _ in range(len(y))))
Y = np.array(list(list(i for j in range(vlb, vub+1)) for i in y))
Z = np.array(list(list(0.0005 for _ in range(vlb, vub+1)) for _ in range(len(y))))
# print(f)
for i in range(len(y)):
    for j in range(len(x)):
        Z[i][j] = f[(X[i][j], Y[i][j])]
print(f)
fig = plt.figure()
ax = plt.axes(projection = '3d')
ax.plot_surface(X, Y, Z, rstride=1, cstride=1, cmap='viridis', edgecolor='none')
ax.set_title("Hamiltoniain Cycle - Dynamic Programming")
ax.invert_xaxis()
ax.set_xlabel("Number of Vertices")
ax.set_ylabel("Graph Density")
ax.set_zlabel("Time Taken")
plt.show()